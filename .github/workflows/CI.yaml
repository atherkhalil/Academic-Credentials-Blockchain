# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Production-CI

on:
  push:
    branches: [ main ]
env:
  # Use docker.io for Docker Hub if empty
  # github.repository as <account>/<repo>
  REGISTRY: docker.io
  IMAGE_NAME: atherkhalil/cred-bsv
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i
    - name: Log into DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.IMAGE_NAME }}:latest
 
  deploy:
    name: Deploy to UoS Server
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: SSH & run commands
      uses: appleboy/ssh-action@master
      with:
        host: 83.110.108.35
        username: server20
        password: ub20server
        port: 22001
        script: |
          # Stop running Docker Container
          docker kill $(docker ps -q -f name=cred-bsv)
          # System cleanup
          docker system prune -f
          # Remove old image
          docker rmi $(docker images atherkhalil/cred-bsv:latest -q)
          # Run a new container from a new image
          docker run -d --name cred-bsv --mount source=runcache,target=/app/.runcache -p 4000:4000 atherkhalil/cred-bsv:latest
